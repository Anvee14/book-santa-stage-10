{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\anvee\\\\my_git_projects\\\\book-santa-stage-10\\\\screens\\\\BookRequestScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport db from \"../config\";\nimport firebase from 'firebase';\nimport MyHeader from \"../components/MyHeader\";\nimport BookSearch from 'react-native-google-books';\n\nvar BookRequestScreen = function (_Component) {\n  _inherits(BookRequestScreen, _Component);\n\n  var _super = _createSuper(BookRequestScreen);\n\n  function BookRequestScreen() {\n    var _this;\n\n    _classCallCheck(this, BookRequestScreen);\n\n    _this = _super.call(this);\n\n    _this.addRequest = function _callee(bookName, reasonToRequest) {\n      var userId, randomRequestId, books;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              userId = _this.state.userId;\n              randomRequestId = _this.createUniqueId();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(BookSearch.searchbook(bookName, 'AIzaSyAzb1p2Kebm-Jn9OhMQ0ZDH2OzgQAlHlQw'));\n\n            case 4:\n              books = _context.sent;\n              db.collection('requested_books').add({\n                \"user_id\": userId,\n                \"book_name\": bookName,\n                \"reason_to_request\": reasonToRequest,\n                \"request_id\": randomRequestId,\n                \"book_status\": \"requested\",\n                \"date\": firebase.firestore.FieldValue.serverTimestamp(),\n                \"img_link\": books.data[0].volumeInfo.imageLinks.smallThumbnail\n              });\n              _context.next = 8;\n              return _regeneratorRuntime.awrap(_this.getBookRequest());\n\n            case 8:\n              db.collection('users').where(\"email_id\", \"==\", userId).get().then().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  db.collection('users').doc(doc.id).update({\n                    IsBookRequestActive: true\n                  });\n                });\n              });\n\n              _this.setState({\n                bookName: '',\n                reasonToRequest: '',\n                requestId: randomRequestId\n              });\n\n              return _context.abrupt(\"return\", Alert.alert(\"Book Requested Successfully\"));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.receivedBooks = function (bookName) {\n      var userId = _this.state.userId;\n      var requestId = _this.state.requestId;\n      db.collection('received_books').add({\n        \"user_id\": userId,\n        \"book_name\": bookName,\n        \"request_id\": requestId,\n        \"bookStatus\": \"received\"\n      });\n    };\n\n    _this.renderItem = function (_ref) {\n      var item = _ref.item,\n          i = _ref.i;\n      return React.createElement(TouchableHighlight, {\n        style: {\n          alignItems: \"center\",\n          backgroundColor: \"#DDDDDD\",\n          padding: 10,\n          width: '90%'\n        },\n        activeOpacity: 0.6,\n        u: true,\n        nderlayColor: \"#DDDDDD\",\n        onPress: function onPress() {\n          _this.setState({\n            showFlatlist: false,\n            bookName: item.volumeInfo.title\n          });\n        },\n        bottomDivider: true,\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 9\n        }\n      }, \" \", item.volumeInfo.title, \" \"));\n    };\n\n    _this.getBookRequest = function () {\n      var bookRequest = db.collection('requested_books').where('user_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          if (doc.data().book_status !== \"received\") {\n            _this.setState({\n              requestId: doc.data().request_id,\n              requestedBookName: doc.data().book_name,\n              bookStatus: doc.data().book_status,\n              docId: doc.id\n            });\n          }\n        });\n      });\n    };\n\n    _this.sendNotification = function () {\n      db.collection('users').where('email_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var name = doc.data().first_name;\n          var lastName = doc.data().last_name;\n          db.collection('all_notifications').where('request_id', '==', _this.state.requestId).get().then(function (snapshot) {\n            snapshot.forEach(function (doc) {\n              var donorId = doc.data().donor_id;\n              var bookName = doc.data().book_name;\n              db.collection('all_notifications').add({\n                \"targeted_user_id\": donorId,\n                \"message\": name + \" \" + lastName + \" received the book \" + bookName,\n                \"notification_status\": \"unread\",\n                \"book_name\": bookName\n              });\n            });\n          });\n        });\n      });\n    };\n\n    _this.updateBookRequestStatus = function () {\n      db.collection('requested_books').doc(_this.state.docId).update({\n        book_status: 'received'\n      });\n      db.collection('users').where('email_id', '==', _this.state.userId).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          db.collection('users').doc(doc.id).update({\n            IsBookRequestActive: false\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      userId: firebase.auth().currentUser.email,\n      bookName: \"\",\n      reasonToRequest: \"\",\n      IsBookRequestActive: \"\",\n      requestedBookName: \"\",\n      bookStatus: \"\",\n      requestId: \"\",\n      userDocId: '',\n      docId: '',\n      dataSource: '',\n      showFlatlist: false,\n      imgLink: ''\n    };\n    return _this;\n  }\n\n  _createClass(BookRequestScreen, [{\n    key: \"createUniqueId\",\n    value: function createUniqueId() {\n      return Math.random().toString(36).substring(7);\n    }\n  }, {\n    key: \"getIsBookRequestActive\",\n    value: function getIsBookRequestActive() {\n      var _this2 = this;\n\n      db.collection('users').where('email_id', '==', this.state.userId).onSnapshot(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          _this2.setState({\n            IsBookRequestActive: doc.data().IsBookRequestActive,\n            userDocId: doc.id\n          });\n        });\n      });\n    }\n  }, {\n    key: \"getBooksFromApi\",\n    value: function getBooksFromApi(bookName) {\n      var books;\n      return _regeneratorRuntime.async(function getBooksFromApi$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.setState({\n                bookName: bookName\n              });\n\n              if (!(bookName.length > 2)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(BookSearch.searchbook(bookName, 'AIzaSyBOwVa_l4aUtNr7efkB-PFOMaZJtPp3C18'));\n\n            case 4:\n              books = _context2.sent;\n              this.setState({\n                dataSource: books.data(),\n                showFlatlist: true\n              });\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getBookRequest();\n      this.getIsBookRequestActive();\n      this.getBooksFromApi;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.IsBookRequestActive === true) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 9\n          }\n        }, React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }\n        }, \"Book Name\"), React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }\n        }, this.state.requestedBookName)), React.createElement(View, {\n          style: {\n            borderColor: \"orange\",\n            borderWidth: 2,\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: 10,\n            margin: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }\n        }, \" Book Status \"), React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }\n        }, this.state.bookStatus)), React.createElement(TouchableOpacity, {\n          style: {\n            borderWidth: 1,\n            borderColor: 'orange',\n            backgroundColor: \"orange\",\n            width: 300,\n            alignSelf: 'center',\n            alignItems: 'center',\n            height: 30,\n            marginTop: 30\n          },\n          onPress: function onPress() {\n            _this3.sendNotification();\n\n            _this3.updateBookRequestStatus();\n\n            _this3.receivedBooks(_this3.state.requestedBookName);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }\n        }, \"I recieved the book \")));\n      } else {\n        return React.createElement(View, {\n          style: {\n            flex: 1\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 9\n          }\n        }, React.createElement(MyHeader, {\n          title: \"Request Book\",\n          navigation: this.props.navigation,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 11\n          }\n        }), React.createElement(ScrollView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 11\n          }\n        }, React.createElement(KeyboardAvoidingView, {\n          style: styles.keyBoardStyle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }\n        }, React.createElement(TextInput, {\n          style: styles.formTextInput,\n          placeholder: \"enter book name\",\n          onClear: function onClear(text) {\n            _this3.getBooksFromApi('');\n          },\n          onChangeText: function onChangeText(text) {\n            _this3.getBooksFromApi(text);\n          },\n          value: this.state.bookName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 15\n          }\n        }), this.state.showFlatlist ? React.createElement(FlatList, {\n          data: this.state.dataSource,\n          renderItem: this.renderItem,\n          enableEmptySections: true,\n          style: {\n            marginTop: 10\n          },\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 20\n          }\n        }) : React.createElement(View, {\n          \"style-\": {\n            alignItem: 'center'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 21\n          }\n        }, React.createElement(TextInput, {\n          style: [styles.formTextInput, {\n            height: 300\n          }],\n          multiline: true,\n          numberOfLines: 8,\n          placeholder: \"Why do you need the book\",\n          onChangeText: function onChangeText(text) {\n            _this3.setState({\n              reasonToRequest: text\n            });\n          },\n          value: this.state.reasonToRequest,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 23\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            _this3.addRequest(_this3.state.bookName, _this3.state.reasonToRequest);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 23\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 25\n          }\n        }, \"Request\"))))));\n      }\n    }\n  }]);\n\n  return BookRequestScreen;\n}(Component);\n\nexport { BookRequestScreen as default };\nvar styles = StyleSheet.create({\n  keyBoardStyle: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  formTextInput: {\n    width: \"75%\",\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#ffab91',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  button: {\n    width: \"75%\",\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/anvee/my_git_projects/book-santa-stage-10/screens/BookRequestScreen.js"],"names":["React","Component","db","firebase","MyHeader","BookSearch","BookRequestScreen","addRequest","bookName","reasonToRequest","userId","state","randomRequestId","createUniqueId","searchbook","books","collection","add","firestore","FieldValue","serverTimestamp","data","volumeInfo","imageLinks","smallThumbnail","getBookRequest","where","get","then","snapshot","forEach","doc","id","update","IsBookRequestActive","setState","requestId","Alert","alert","receivedBooks","renderItem","item","i","alignItems","backgroundColor","padding","width","showFlatlist","title","bookRequest","book_status","request_id","requestedBookName","book_name","bookStatus","docId","sendNotification","name","first_name","lastName","last_name","donorId","donor_id","updateBookRequestStatus","auth","currentUser","email","userDocId","dataSource","imgLink","Math","random","toString","substring","onSnapshot","querySnapshot","length","getIsBookRequestActive","getBooksFromApi","flex","justifyContent","borderColor","borderWidth","margin","alignSelf","height","marginTop","props","navigation","styles","keyBoardStyle","formTextInput","text","index","alignItem","button","StyleSheet","create","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableHighlight,\r\n  TextInput,\r\n  KeyboardAvoidingView,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  Alert\r\n} from 'react-native';\r\nimport db from '../config';\r\nimport firebase from 'firebase';\r\nimport MyHeader from '../components/MyHeader'\r\nimport BookSearch from 'react-native-google-books'\r\nexport default class BookRequestScreen extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      userId: firebase.auth().currentUser.email,\r\n      bookName: \"\",\r\n      reasonToRequest: \"\",\r\n      IsBookRequestActive: \"\",\r\n      requestedBookName: \"\",\r\n      bookStatus: \"\",\r\n      requestId: \"\",\r\n      userDocId: '',\r\n      docId: '',\r\n      dataSource: '',\r\n      showFlatlist: false,\r\n      imgLink: ''\r\n    }\r\n  }\r\n\r\n  createUniqueId() {\r\n    return Math.random().toString(36).substring(7);\r\n  }\r\n\r\n\r\n\r\n  addRequest = async (bookName, reasonToRequest) => {\r\n    var userId = this.state.userId\r\n    var randomRequestId = this.createUniqueId()\r\n    var books = await BookSearch.searchbook(bookName, 'AIzaSyAzb1p2Kebm-Jn9OhMQ0ZDH2OzgQAlHlQw')\r\n    db.collection('requested_books').add({\r\n      \"user_id\": userId,\r\n      \"book_name\": bookName,\r\n      \"reason_to_request\": reasonToRequest,\r\n      \"request_id\": randomRequestId,\r\n      \"book_status\": \"requested\",\r\n      \"date\": firebase.firestore.FieldValue.serverTimestamp(),\r\n      \"img_link\": books.data[0].volumeInfo.imageLinks.smallThumbnail\r\n\r\n    })\r\n\r\n    await this.getBookRequest()\r\n    db.collection('users').where(\"email_id\", \"==\", userId).get()\r\n      .then()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          db.collection('users').doc(doc.id).update({\r\n            IsBookRequestActive: true\r\n          })\r\n        })\r\n      })\r\n\r\n    this.setState({\r\n      bookName: '',\r\n      reasonToRequest: '',\r\n      requestId: randomRequestId\r\n    })\r\n\r\n    return Alert.alert(\"Book Requested Successfully\")\r\n\r\n\r\n  }\r\n\r\n  receivedBooks = (bookName) => {\r\n    var userId = this.state.userId\r\n    var requestId = this.state.requestId\r\n    db.collection('received_books').add({\r\n      \"user_id\": userId,\r\n      \"book_name\": bookName,\r\n      \"request_id\": requestId,\r\n      \"bookStatus\": \"received\",\r\n\r\n    })\r\n  }\r\n\r\n\r\n\r\n\r\n  getIsBookRequestActive() {\r\n    db.collection('users')\r\n      .where('email_id', '==', this.state.userId)\r\n      .onSnapshot(querySnapshot => {\r\n        querySnapshot.forEach(doc => {\r\n          this.setState({\r\n            IsBookRequestActive: doc.data().IsBookRequestActive,\r\n            userDocId: doc.id\r\n          })\r\n        })\r\n      })\r\n  }\r\n  async getBooksFromApi(bookName) {\r\n    this.setState({\r\n      bookName: bookName\r\n    })\r\n    if (bookName.length > 2) {\r\n      var books = await BookSearch.searchbook(bookName, 'AIzaSyBOwVa_l4aUtNr7efkB-PFOMaZJtPp3C18')\r\n      this.setState({\r\n        dataSource: books.data(),\r\n        showFlatlist: true\r\n      })\r\n    }\r\n  }\r\n  //render item function to render the books from api\r\n  renderItem = ({ item, i }) => {\r\n    return (\r\n      <TouchableHighlight style={{\r\n        alignItems: \"center\",\r\n        backgroundColor: \"#DDDDDD\",\r\n        padding: 10,\r\n        width: '90%',\r\n      }}\r\n        activeOpacity={0.6} u\r\n        nderlayColor=\"#DDDDDD\"\r\n        onPress={() => {\r\n          this.setState\r\n            ({ showFlatlist: false, bookName: item.volumeInfo.title, })\r\n        }}\r\n        bottomDivider >\r\n        <Text> {item.volumeInfo.title} </Text>\r\n      </TouchableHighlight>\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  getBookRequest = () => {\r\n    // getting the requested book\r\n    var bookRequest = db.collection('requested_books')\r\n      .where('user_id', '==', this.state.userId)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          if (doc.data().book_status !== \"received\") {\r\n            this.setState({\r\n              requestId: doc.data().request_id,\r\n              requestedBookName: doc.data().book_name,\r\n              bookStatus: doc.data().book_status,\r\n              docId: doc.id\r\n            })\r\n          }\r\n        })\r\n      })\r\n  }\r\n\r\n\r\n\r\n  sendNotification = () => {\r\n    //to get the first name and last name\r\n    db.collection('users').where('email_id', '==', this.state.userId).get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          var name = doc.data().first_name\r\n          var lastName = doc.data().last_name\r\n\r\n          // to get the donor id and book nam\r\n          db.collection('all_notifications').where('request_id', '==', this.state.requestId).get()\r\n            .then((snapshot) => {\r\n              snapshot.forEach((doc) => {\r\n                var donorId = doc.data().donor_id\r\n                var bookName = doc.data().book_name\r\n\r\n                //targert user id is the donor id to send notification to the user\r\n                db.collection('all_notifications').add({\r\n                  \"targeted_user_id\": donorId,\r\n                  \"message\": name + \" \" + lastName + \" received the book \" + bookName,\r\n                  \"notification_status\": \"unread\",\r\n                  \"book_name\": bookName\r\n                })\r\n              })\r\n            })\r\n        })\r\n      })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBookRequest()\r\n    this.getIsBookRequestActive()\r\n    this.getBooksFromApi\r\n\r\n  }\r\n\r\n  updateBookRequestStatus = () => {\r\n    //updating the book status after receiving the book\r\n    db.collection('requested_books').doc(this.state.docId)\r\n      .update({\r\n        book_status: 'received'\r\n      })\r\n\r\n    //getting the  doc id to update the users doc\r\n    db.collection('users').where('email_id', '==', this.state.userId).get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          //updating the doc\r\n          db.collection('users').doc(doc.id).update({\r\n            IsBookRequestActive: false\r\n          })\r\n        })\r\n      })\r\n\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n    if (this.state.IsBookRequestActive === true) {\r\n      return (\r\n\r\n        // Status screen\r\n\r\n        <View style={{ flex: 1, justifyContent: 'center' }}>\r\n          <View style={{ borderColor: \"orange\", borderWidth: 2, justifyContent: 'center', alignItems: 'center', padding: 10, margin: 10 }}>\r\n            <Text>Book Name</Text>\r\n            <Text>{this.state.requestedBookName}</Text>\r\n          </View>\r\n          <View style={{ borderColor: \"orange\", borderWidth: 2, justifyContent: 'center', alignItems: 'center', padding: 10, margin: 10 }}>\r\n            <Text> Book Status </Text>\r\n\r\n            <Text>{this.state.bookStatus}</Text>\r\n          </View>\r\n\r\n          <TouchableOpacity style={{ borderWidth: 1, borderColor: 'orange', backgroundColor: \"orange\", width: 300, alignSelf: 'center', alignItems: 'center', height: 30, marginTop: 30 }}\r\n            onPress={() => {\r\n              this.sendNotification()\r\n              this.updateBookRequestStatus();\r\n              this.receivedBooks(this.state.requestedBookName)\r\n            }}>\r\n            <Text>I recieved the book </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        // Form screen\r\n        <View style={{ flex: 1 }}>\r\n          <MyHeader title=\"Request Book\" navigation={this.props.navigation} />\r\n\r\n          <ScrollView>\r\n            <KeyboardAvoidingView style={styles.keyBoardStyle}>\r\n              <TextInput\r\n                style={styles.formTextInput}\r\n                placeholder={\"enter book name\"}\r\n                onClear={text => {\r\n                  this.getBooksFromApi('')\r\n                }}\r\n                onChangeText={text => {\r\n                  this.getBooksFromApi(text)\r\n                }}\r\n                value={this.state.bookName}\r\n              />\r\n              {\r\n                this.state.showFlatlist ?\r\n                  (<FlatList\r\n                    data={this.state.dataSource}\r\n                    renderItem={this.renderItem}\r\n                    enableEmptySections={true}\r\n                    style={{ marginTop: 10 }}\r\n                    keyExtractor={(item, index) => index.toString()\r\n                    } />)\r\n                  : (\r\n                    <View style-={{ alignItem: 'center' }}>\r\n                      <TextInput\r\n                        style={[styles.formTextInput, { height: 300 }]}\r\n                        multiline\r\n                        numberOfLines={8}\r\n                        placeholder={\"Why do you need the book\"}\r\n                        onChangeText={(text) => {\r\n                          this.setState({\r\n                            reasonToRequest: text\r\n                          })\r\n                        }}\r\n                        value={this.state.reasonToRequest}\r\n                      />\r\n                      <TouchableOpacity\r\n                        style={styles.button}\r\n                        onPress={() => {\r\n                          this.addRequest(this.state.bookName, this.state.reasonToRequest);\r\n                        }}\r\n                      >\r\n                        <Text>Request</Text>\r\n                      </TouchableOpacity>\r\n                    </View>\r\n                  )\r\n              }\r\n\r\n\r\n            </KeyboardAvoidingView>\r\n          </ScrollView>\r\n        </View>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  keyBoardStyle: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  formTextInput: {\r\n    width: \"75%\",\r\n    height: 35,\r\n    alignSelf: 'center',\r\n    borderColor: '#ffab91',\r\n    borderRadius: 10,\r\n    borderWidth: 1,\r\n    marginTop: 20,\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    width: \"75%\",\r\n    height: 50,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: 10,\r\n    backgroundColor: \"#ff5722\",\r\n    shadowColor: \"#000\",\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 8,\r\n    },\r\n    shadowOpacity: 0.44,\r\n    shadowRadius: 10.32,\r\n    elevation: 16,\r\n    marginTop: 20\r\n  },\r\n}\r\n)\r\n"]},"metadata":{},"sourceType":"module"}